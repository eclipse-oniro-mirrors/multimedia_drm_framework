# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
module_output_path = "drm_framework/drm_framework_fuzztest"

config("drm_framework_capi_fuzztest_system_config") {
  include_dirs = [
    "../../../../../interfaces/kits/c/drm_capi/include",
    "../../../../../interfaces/kits/c/drm_capi/common",
    "../../../../../frameworks/native/test/fuzztest/mediakeysystemndk_fuzzer",
    "../../../../../frameworks/native/test/common/include",
    "../../../../../interfaces/inner_api/native/drm",
    "../../../../../services/utils/include",
  ]
  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]
  cflags_cc = [ "-fno-rtti" ]
  if (use_libfuzzer) {
    defines = [ "SUPPORT_FUZZ" ]
    cflags += [ "-fno-sanitize-coverage=inline-8bit-counters" ]
    cflags_cc += [ "-fno-sanitize-coverage=inline-8bit-counters" ]
  }
}

ohos_fuzztest("mediakeysystemndkFuzzTest") {
  module_out_path = module_output_path
  fuzz_config_file =
      "../../../../../frameworks/native/test/fuzztest/mediakeysystemndk_fuzzer"
  resource_config_file =
      "../../../../../frameworks/native/test/fuzztest/resource/ohos_test.xml"
  configs = [ ":drm_framework_capi_fuzztest_system_config" ]

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = true
  }

  sources = [
    "../../../../../frameworks/native/test/common/src/http.cpp",
    "../../../../../frameworks/native/test/fuzztest/mediakeysystemndk_fuzzer/mediakeysystemndk_fuzzer.cpp",
  ]

  deps = [
    "../../../../../frameworks/native:drm_framework",
    "../../../../../interfaces/kits/c/drm_capi:native_drm",
    "../../../../../interfaces/kits/js/drm_napi:drm_napi",
    "../../../../../services/drm_service:drm_service",
    "//third_party/curl:curl_shared",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_core",
  ]
  subsystem_name = "multimedia"
  part_name = "drm_framework"
}
