package OHOS.DrmStandard;
import IMediaKeySessionServiceCallback;
import IMediaDecryptModuleService;
import DrmTypes;
sequenceable OHOS.IRemoteObject;

interface IMediaKeySessionService{
  void Release();
  void GetMediaDecryptModule([out] IMediaDecryptModuleService decryptModule);
  void GenerateMediaKeyRequest([in] MediaKeyRequestInfo licenseRequestInfo, [out] MediaKeyRequest licenseRequest);
  void ProcessMediaKeyResponse([out] unsigned char[] licenseId, [in] unsigned char[] licenseResponse);
  void GenerateOfflineReleaseRequest([in] unsigned char[] licenseId, [out] unsigned char[] releaseRequest);
  void ProcessOfflineReleaseResponse([in] unsigned char[] licenseId,[in] unsigned char[] releaseReponse);
  void CheckMediaKeyStatus([out] OrderedMap<String, String> licenseStatus);
  void RestoreOfflineMediaKeys([in] unsigned char[] licenseId);
  void ClearMediaKeys();
  void GetContentProtectionLevel([out] ContentProtectionLevel securityLevel);
  void RequireSecureDecoderModule([in] String mimeType, [out] boolean status);
  void SetCallback([in] IMediaKeySessionServiceCallback callbackFunc);
}
