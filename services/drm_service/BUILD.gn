import("//build/ohos.gni")

ohos_shared_library("drm_service") {
  install_enable = true

  include_dirs = [
    "//foundation/graphic/graphic_2d/frameworks/surface/include",
    "//foundation/multimedia/drm_framework/services/drm_service/client/include",
    "//foundation/multimedia/drm_framework/services/drm_service/server/include",
    "//foundation/multimedia/drm_framework/services/drm_service/ipc",
    "//foundation/multimedia/drm_framework/interfaces/inner_api/native",
    "//foundation/multimedia/drm_framework/interfaces/inner_api/native/drm",
    "//foundation/multimedia/drm_framework/services/utils/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
    "//third_party/glib/glibmemdfx",
    "//drivers/hdf_core/interfaces/inner_api/utils",
    "//drivers/hdf_core/adapter/khdf/uniproton/osal/include",
    "//drivers/hdf_core/adapter/uhdf2/ipc/include",
    "//drivers/hdf_core/interfaces/inner_api/ipc",
    "//drivers/hdf_core/interfaces/inner_api/hdi",
    "//foundation//arkui/napi/interfaces/kits",
  ]
  include_dirs += [
    "//utils/system/safwk/native/include",
  ]

  sources = [
    "//foundation/multimedia/drm_framework/services/drm_service/server/src/drm_host_manager.cpp",
    "//foundation/multimedia/drm_framework/services/drm_service/server/src/mediakeysystemfactory_service.cpp",
    "//foundation/multimedia/drm_framework/services/drm_service/server/src/mediakeysystemfactory_service_stub.cpp",
    "//foundation/multimedia/drm_framework/services/drm_service/server/src/mediakeysystem_service.cpp",
    "//foundation/multimedia/drm_framework/services/drm_service/server/src/mediakeysystem_service_stub.cpp",
    "//foundation/multimedia/drm_framework/services/drm_service/server/src/key_session_service.cpp",
    "//foundation/multimedia/drm_framework/services/drm_service/server/src/key_session_service_stub.cpp",
    "//foundation/multimedia/drm_framework/services/drm_service/server/src/media_decrypt_module_service.cpp",
    "//foundation/multimedia/drm_framework/services/drm_service/server/src/media_decrypt_module_service_stub.cpp",
    "//foundation/multimedia/drm_framework/services/drm_service/client/src/key_session_service_callback_proxy.cpp"
  ]

  deps = [  
  ]

  external_deps = [
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "access_token:libprivacy_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "hicollie:libhicollie",
    "hisysevent:libhisysevent",
    "ipc:ipc_core",
    "ipc:ipc_single",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "c_utils:utils",
    "hdf_core:libhdi",
    "napi:ace_napi",
  ]

  cflags = [
    "-Wall",
    "-fPIC",
  ]

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = true
  }

  if (use_musl) {
    if (use_jemalloc && use_jemalloc_dfx_intf) {
      cflags += [ "-DCONFIG_USE_JEMALLOC_DFX_INTF" ]
    }
  }

  cflags_cc = cflags

  subsystem_name = "multimedia"
  part_name = "multimedia_drm_framework"
}
